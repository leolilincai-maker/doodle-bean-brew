---
description: 
globs: 
alwaysApply: true
---

# 通用代码开发标准

## 📝 代码风格规范

### 通用原则
- **可读性优先**：代码应该像散文一样易于阅读
- **简洁明了**：避免过度复杂的解决方案
- **一致性**：在整个项目中保持统一的代码风格
- **文档化**：关键逻辑必须有清晰的注释

### 命名约定
- **变量名**：使用描述性名称，避免缩写
- **函数名**：动词开头，清楚表达功能
- **文件名**：小写，使用连字符分隔
- **类名**：首字母大写，驼峰命名法

## 🔧 开发最佳实践

### 代码组织
- **文件结构**：逻辑清晰，相关功能分组
- **模块化**：功能单一，易于测试和维护
- **依赖管理**：明确的导入/导出声明

### 错误处理
- **预防性编程**：预期并处理可能的错误情况
- **有意义的错误信息**：帮助快速定位问题
- **优雅降级**：系统应该能够优雅地处理异常

### 性能考虑
- **避免过早优化**：先确保正确性，再考虑性能
- **合理的时间复杂度**：选择适当的算法和数据结构
- **资源管理**：及时释放不再需要的资源

## 🎯 开发流程

### 代码质量
- **增量开发**：小步迭代，频繁测试
- **代码审查**：重要变更需要仔细检查
- **重构时机**：及时清理技术债务

### 用户体验
- **响应式设计**：确保在不同设备上的良好体验
- **加载性能**：优化页面加载速度
- **可访问性**：考虑所有用户的使用需求

记住：好的代码不仅仅是能运行的代码，更是易于理解、维护和扩展的代码！ 💻✨
